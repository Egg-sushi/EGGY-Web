import React from 'react';
import Head from 'next/head';
import styled from '@emotion/styled';
import { useRouter } from 'next/router';
import { useTheme } from '@emotion/react';

import { ColorValueType } from '@/theme';
import { getAnswers, share } from '@/utils';
import { BASE_FRONT_URL } from '@/constants';
import { useCalculateSkinTypes } from '@/api/query';
import { BaumannPercentResult, Button, Flex, Header, SkeletonImage, Text } from '@/components';

export default function BaumannResultPage() {
  const theme = useTheme();
  const router = useRouter();
  const calculatedSkinTypeData = useCalculateSkinTypes(
    Object.entries(getAnswers()).map((answer) => ({
      questionId: Number(answer[0]),
      answerId: answer[1],
    })),
  );

  const handleClickResetButton = React.useCallback(() => {
    router.push('/baumann');
  }, [router]);

  const handleClickShareButton = React.useCallback(async () => {
    const result = await share({
      title: 'Find your SkinType',
      text: 'Do you want to know your skinType?',
      url: `${BASE_FRONT_URL}/baumann/shared/${calculatedSkinTypeData.data?.type}`,
    });
    if (result === 'copiedToClipboard') {
      alert('Copy completed.');
    }
  }, [calculatedSkinTypeData.data?.type]);

  if (calculatedSkinTypeData.isSuccess) {
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        <Wrapper flexDirection="column" paddingTop={136} gap={32} color={theme.colors.blue50}>
          <Text variant="body2" fontColor={theme.colors.gray400}>
            Your Skin Type is :
          </Text>
          <ImageWrapper>
            <Text variant="h3" fontColor={theme.colors.primary} align="center">
              {calculatedSkinTypeData.data.type}
            </Text>
            <SkeletonImage
              priority
              width={140}
              height={120}
              src="/Diamond2.png"
              alt="baumman-thumbnail"
            />
          </ImageWrapper>
          <Flex justifyContent="space-between" gap={48}>
            <Button variant="outlined" onClick={handleClickResetButton} borderRadius={24}>
              Retry
            </Button>
            <Button variant="filled" onClick={handleClickShareButton} borderRadius={24}>
              Share
            </Button>
          </Flex>
          <BaumannPercentResult
            type={calculatedSkinTypeData.data.type}
            percents={calculatedSkinTypeData.data.percents}
          />
        </Wrapper>
        <Wrapper flexDirection="column" paddingTop={56} color={theme.colors.white} gap={28}>
          <Text variant="h6" fontColor={theme.colors.blue800}>
            Whatâ€™s {calculatedSkinTypeData.data.type} ?
          </Text>
          <Flex flexDirection="column" gap={16}>
            <Card variant="body4" fontColor={theme.colors.primary} align="center">
              I sunburn and blister, but my skin does not change color.
            </Card>
            <Card variant="body4" fontColor={theme.colors.primary} align="center">
              I sunburn and blister, but my skin does not change color.
            </Card>
            <Card variant="body4" fontColor={theme.colors.primary} align="center">
              I sunburn and blister, but my skin does not change color.
            </Card>
            <Card variant="body4" fontColor={theme.colors.primary} align="center">
              I sunburn and blister, but my skin does not change color.
            </Card>
          </Flex>
        </Wrapper>
        <Wrapper flexDirection="column" paddingTop={56} color={theme.colors.teritiary} gap={28}>
          <Text variant="h6" fontColor={theme.colors.blue800}>
            Discover Your Cosmetic
          </Text>
          <Flex flexDirection="column" gap={16}>
            <ProductCard gap={24}>
              <ProductCardBackground />
              <SkeletonImage
                priority
                width={74}
                height={68}
                src="/Diamond2.png"
                alt="baumman-thumbnail"
                style={{ zIndex: 999 }}
              />
              <Flex flexDirection="column" gap={12} alignContent="center" style={{ zIndex: 999 }}>
                <Text variant="body2" fontColor={theme.colors.blue800}>
                  Cosmetic
                </Text>
                <Text variant="body4" fontColor={theme.colors.blue800}>
                  This cosmetic suits you well!
                </Text>
              </Flex>
            </ProductCard>
            <Button
              variant="filled"
              hierarchy="teritiary"
              style={{ marginTop: 32, paddingBlock: 12 }}
              onClick={() => router.push('/products')}
            >
              Find more your Cosmetic !
            </Button>
          </Flex>
        </Wrapper>
      </>
    );
  }
  return null;
}

type StyleProps = { paddingTop: number; color: ColorValueType };
const Wrapper = styled(Flex)<StyleProps>`
  padding: ${({ paddingTop }) => `${paddingTop}px 34px 56px 34px`};
  background-color: ${({ color }) => color};
`;

const ImageWrapper = styled.div`
  position: relative;
  margin-inline: auto;
`;

const Card = styled(Text)`
  padding: 16px 36px;
  border-radius: 4px;
  background-color: ${({ theme }) => theme.colors.blue50};
  filter: drop-shadow(2px 4px 4px rgba(0, 0, 0, 0.1));
`;

const ProductCard = styled(Flex)`
  position: relative;
  margin-top: 16px;
  padding-left: 24px;
`;

const ProductCardBackground = styled.div`
  width: 100%;
  height: calc(100% + 48px);
  padding: 32px 24px;
  box-sizing: border-box;
  position: absolute;
  top: -24px;
  left: 0px;
  background-color: ${({ theme }) => theme.colors.gray200};
  opacity: 0.5;
  border-radius: 8px;
  z-index: 992;
`;
