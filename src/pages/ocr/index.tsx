import React from 'react';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import styled from '@emotion/styled';

import { theme } from '@/theme';
import { CircleCheckBox, Flex, Header, Text, Title } from '@/components';
import { ProductService } from '@/api/service';
import { useLink } from '@/hooks';

const OCR_FEATURES = ['Find your cosmetic', 'Is good for your skin?'];

export default function OCRPage() {
  const link = useLink();
  const [imageUrl, setImageUrl] = React.useState<string>('');
  const [isLoading, setIsLoading] = React.useState<boolean>(false);

  const handleChangeFile = React.useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {
    const files = e.target.files;
    if (files && files.length > 0) {
      setIsLoading(true);
      const file = files[0];
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = async () => {
        setImageUrl(reader.result as string);
        const imageData = reader.result?.toString()?.split(',')[1];
        if (imageData) {
          try {
            const response = await axios.post<{ text: string }>('/api/ocr', { imageData });
            const product = await ProductService.getSearchProductByTitle(response.data.text);
            if (product.data.length > 0) {
              link.to('productItem', `${product.data[4].id}`);
            } else {
              alert('Cannot Find Cosmetic');
              link.to('request');
            }
            // TODO: text를 가지고 백엔드에 검색해봐야 함
          } catch (error) {
            console.error(error);
          } finally {
            setIsLoading(false);
          }
        } else {
          setIsLoading(false);
        }
      };
    }
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Wrapper as={'section'} flexDirection="column" justifyContent="space-evenly">
        <Title
          size="lg"
          title={'OCR'}
          description={'Do you want to check your cosmetics?'}
          color={theme.colors.black}
        />
        <Flex flexDirection="column" gap={16}>
          <Text variant="h4" fontColor={theme.colors.blue800}>
            Upload Image
          </Text>
          <UploadImageWrapper
            flexDirection="column"
            gap={32}
            justifyContent="center"
            alignContent="center"
            style={{ position: 'relative' }}
          >
            <FileInput type="file" accept="image/*" capture onChange={handleChangeFile} />
            <Image
              src="/Upload.png"
              alt="upload-image"
              width={88}
              height={76}
              style={{ marginInline: 'auto' }}
            />
            <Text variant="body3" fontColor={theme.colors.blue800} align="center">
              Just upload cosmetic image you want to find
            </Text>
          </UploadImageWrapper>
        </Flex>
        <Flex as={'ul'} flexDirection="column" gap={24}>
          {OCR_FEATURES.map((feature) => (
            <FeatureItem key={feature}>
              <CircleCheckBox checked={true} />
              <Text variant="body2">{feature}</Text>
            </FeatureItem>
          ))}
        </Flex>
      </Wrapper>
    </>
  );
}

const Wrapper = styled(Flex)`
  padding-top: 60px;
  padding-inline: 34px;
  height: calc(100% - 60px);
  background-color: #fafcfe;
`;

const UploadImageWrapper = styled(Flex)`
  border: ${({ theme }) => `2px dashed ${theme.colors.blue400}`};
  padding-block: 56px;
  box-sizing: border-box;
`;

const FeatureItem = styled.li`
  display: flex;
  border-radius: 10px;
  padding-block: 12px;
  padding-inline: 20px;
  background-color: ${({ theme }) => theme.colors.blue100};
  cursor: pointer;
  position: relative;

  &,
  & > div {
    transition: all 0.2s ease-in;
  }

  & > div {
    padding-left: 20px;
    color: ${({ theme }) => theme.colors.blue500};
  }
`;

const FileInput = styled.input`
  width: 100%;
  height: 100%;
  position: absolute;
  opacity: 0;
`;
